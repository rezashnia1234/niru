<krpano version="1.8.2" title="flat image" onstart="startup();" showerrors="false" logkey="false">

	<include url="contro-normal.xml" />
	
	<control movetocursor="vector" />
	<control mousetype="moveto" />
	<control keybaccelerate="0.5" />
	<!-- set skin settings: bingmaps? gyro? -->
 <include url="%SWFPATH%/contextmenu.xml" />	<skin_settings bingmaps="false" bingmaps_key=""
	               gyro="true"
	               />
 	<!-- <include url="%SWFPATH%/map.xml" />-->

	<!-- set optional skin logo url -->
	<layer name="skin_logo" url="" scale="0.25" opened_onclick="openurl('...',_blank);" />


	<action name="startup">
		set(autorotate.enabled,'true');
		set(autorotate.waittime,20);
		set(IsAutoRotate,true);
		
		<!-- build thumbnails when there is more than one scene (remove the line below to remove the thumbnails) -->
		<!---->
		if(scene.count GT 1, buildthumbs(); );
			openthumb();
		
		
		if(startscene === null, copy(startscene,scene[0].name));
			loadscene("scene_Gopro-01_07_sphere", null, MERGE);
		
	</action>

    <plugin
		name="gyro"
		devices="html5"
		url="%SWFPATH%/plugins/gyro.js"
		keep="true"
		camroll="true" friction="0" velastic="0"
     />
<!--
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
===========================================================START SCENES=========================================================================
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
-->
	
	<scene name="scene_Gopro-01_07_sphere" title="Gopro-01_07_sphere" onstart="action(startscene);" thumburl="panos/Gopro-01_07_sphere.tiles/thumb.jpg" lat="" lng="" heading="">
		<action name="startscene">
			//action(activatespotRadar,scene_GO01_01_Panorama, 0); 
			//set(plugin[radar].heading, 0);
			//set(plugin[panoControl].heading,0);
			
			set(plugin[play].alpha,0);
			set(plugin[tolaTime].alpha,0);
			set(plugin[volume].alpha,0);
			//hotspot[videospot].stop();
			//action(pausevideo);
			
			set(plugin[MapIcon].alpha,1);
			set(plugin[MapIcon].enabled,true);
			set(plugin[Littelplant-icon].alpha,1);
			set(plugin[Littelplant-icon].enabled,true);
			set(plugin[rotate-icon].alpha,1);
			set(plugin[rotate-icon].enabled,true);
		</action>

		<view hlookat="874.414" vlookat="-5.520" fovtype="MFOV" fov="132.227" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/Gopro-01_07_sphere.tiles/preview.jpg" />

		<image>
			<cube url="panos/Gopro-01_07_sphere.tiles/pano_%s.jpg" />
		</image>
		<!-- place your scene hotspots here -->

	</scene>

	<scene name="scene_Gopro-01_17_Panorama-expo2_sphere" title="Gopro-01_17 Panorama-expo2_sphere" onstart="action(startscene);" thumburl="panos/Gopro-01_17_Panorama-expo2_sphere.tiles/thumb.jpg" lat="" lng="" heading="">
		<action name="startscene">
			//action(activatespotRadar,scene_GO01_01_Panorama, 0); 
			//set(plugin[radar].heading, 0);
			//set(plugin[panoControl].heading,0);
			
			set(plugin[play].alpha,0);
			set(plugin[tolaTime].alpha,0);
			set(plugin[volume].alpha,0);
			//hotspot[videospot].stop();
			//action(pausevideo);
			
			set(plugin[MapIcon].alpha,1);
			set(plugin[MapIcon].enabled,true);
			set(plugin[Littelplant-icon].alpha,1);
			set(plugin[Littelplant-icon].enabled,true);
			set(plugin[rotate-icon].alpha,1);
			set(plugin[rotate-icon].enabled,true);
		</action>

		<view hlookat="12.037" vlookat="8.933" fovtype="MFOV" fov="120.000" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/Gopro-01_17_Panorama-expo2_sphere.tiles/preview.jpg" />

		<image>
			<cube url="panos/Gopro-01_17_Panorama-expo2_sphere.tiles/pano_%s.jpg" />
		</image>
		<!-- place your scene hotspots here -->

	</scene>
	

<!--
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
=============================================================END SCENES=========================================================================
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\///////////////////////////////////////////////////////////////////////////////
-->
	<action name="buildthumbs">
		if(%1 != NEXT, set(i,0));
		if(i LT scene.count,
			copy(thumb, scene[get(i)].thumburl);
			txtadd(thumbname,'thumb_',get(i));
			addplugin(get(thumbname));
			set(plugin[get(thumbname)].url, get(thumb));
			set(plugin[get(thumbname)].keep, true);
			set(plugin[get(thumbname)].align, rightbottom);
			set(plugin[get(thumbname)].width,  40);
			set(plugin[get(thumbname)].height, 40);
			mul(plugin[get(thumbname)].x, i,3);
			mul(plugin[get(thumbname)].y, i,3);
			add(plugin[get(thumbname)].x, 6);
			add(plugin[get(thumbname)].y, 104);
			copy(plugin[get(thumbname)].xsmall, plugin[get(thumbname)].x);
			copy(plugin[get(thumbname)].ysmall, plugin[get(thumbname)].y);
			add(plugin[get(thumbname)].zorder, 100, i);
			set(plugin[get(thumbname)].effect, glow(0xFFFFFF,1.0,2,10000));
			set(plugin[get(thumbname)].jsborder, '1px solid #FFFFFF');
			copy(plugin[get(thumbname)].thumbpos, i);
			set(plugin[get(thumbname)].linkedscene, get(scene[get(i)].name) );
			set(plugin[get(thumbname)].onclick, openthumbs() );
			inc(i);
			buildthumbs(NEXT);
		  );
	</action>

	<action name="openthumb">
		if(%2 != NEXT,
			set(pos,0);
			copy(curpos, plugin[%1].thumbpos);
			set(xdst, 0);
			set(ydst, 0);
		  );

		if(pos LT curpos,
			inc(pos);
			inc(ydst,90);
			sub(ymax, stageheight, 100);
			if(ydst GT ymax, inc(xdst,90);set(ydst,0); );
			openthumb(%1,NEXT);
		  ,
			add(xdst,10);
			add(ydst,10);
			tween(plugin[%1].x, get(xdst) );
			tween(plugin[%1].y, get(ydst) );
			tween(plugin[%1].width, 80);
			tween(plugin[%1].height, 80);
		  );
	</action>

	<action name="closethumb">
		tween(plugin[%1].x, get(plugin[%1].xsmall));
		tween(plugin[%1].y, get(plugin[%1].ysmall));
		tween(plugin[%1].width, 40);
		tween(plugin[%1].height, 40);
	</action>

	<action name="openthumbs">
		if(%1 != NEXT,
			set(i,0);
			set(events.onclick, set(events.onclick,null); delayedcall(0.1, closethumbs() ); );
		  );

		if(i LT scene.count,
			txtadd(thumbname,'thumb_',get(i));
			openthumb(get(thumbname));
			set(plugin[get(thumbname)].onclick, set(events.onclick,null); closethumbs(); loadscene(get(linkedscene),null,MERGE,BLEND(1)); );
			inc(i);
			openthumbs(NEXT);
		  );
	</action>

	<action name="closethumbs">
		if(%1 != NEXT, set(i,0));
		if(i LT scene.count,
			txtadd(thumbname,'thumb_',get(i));
			closethumb(get(thumbname));
			set(plugin[get(thumbname)].onclick, openthumbs() );
			inc(i);
			closethumbs(NEXT);
		  );
	</action>
	<!-- thumbnail actions end -->

</krpano>

